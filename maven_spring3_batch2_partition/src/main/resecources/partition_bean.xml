<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- <bean id="pagingItemReader"
	 	class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
	 		<property name="dataSource" ref="dataSource"></property>
	 		<property name="queryProvider">
	 			<bean class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
	 				<property name="dataSource" ref="dataSource"></property>
					<property name="selectClause" value="u.id,u.name,u.age,u.balance"></property>
					<property name="fromClause" value="from users u "></property>
					<property name="whereClause" value=" utype  = 0 "></property>
					<property name="sortKey" value="u.id"></property>	
				</bean>
	 		</property>
	 		
	 		<property name="pageSize" value="3" />
	 		<property name="rowMapper">
	 				<bean class="com.kang.batch2.partition.mapping.UserDbMapper"></bean>
	 		</property>
	 </bean> -->
	 <bean id="pagingItemReader"
	 	class="org.springframework.batch.item.database.JdbcCursorItemReader" scope="step">
	 		<property name="dataSource" ref="dataSource"></property>
	 		<property name="sql" value="select u.id,u.name,u.age,u.balance from users u where utype  = 0  limit ?,? "></property>
	 		<property name="rowMapper">
	 				<bean class="com.kang.batch2.partition.mapping.UserDbMapper"></bean>
	 		</property>
	 		<property name="preparedStatementSetter">
	 				<bean class="org.springframework.batch.core.resource.ListPreparedStatementSetter" scope="step">
	 					<property name="parameters">
	 						<list>
	 							<value>#{stepExecutionContext[fromId]}</value>
	 							<value>#{stepExecutionContext[toId]}</value>
	 						</list>
	 					</property>
	 				</bean>
	 		
	 		</property>
	 </bean>
	 
	 
	 
	 
	 <bean id="txtReader"
			class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">  
					<property name="resource" value="#{jobParameters['inputFilePath']}"></property>		
					<property name="lineMapper">
						<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
							<property name="lineTokenizer">
								<bean
									class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
									<property name="delimiter" value="|"></property>
								</bean>
							</property>
							
							<property name="fieldSetMapper">
								<bean class="com.kang.batch2.partition.mapping.UserTxtMapper">
<!-- 										<property name="prototypeBeanName" value="studentTxt"></property>		
 -->								</bean>
							</property>
						</bean>
					</property>
		</bean>
		
		
		<!-- <bean id="studentTxt" class="com.kang.batch2.partition.model"  scope="prototype"></bean>
		 -->
	 
	 
	
	<bean id="flatFileItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
			<property name="resource" value="file:csv/outputs/users.processed#{stepExecutionContext[fromId]}-#{stepExecutionContext[toId]}.csv"></property>
			<property name="appendAllowed" value="false"></property>
			<property name="lineAggregator">
				<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
					<property name="delimiter" value="," />
					<property name="fieldExtractor">
						<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
							<property name="names" value="id,name,age,balance"></property>
						</bean>
					</property>
				</bean>
			</property>
	</bean>
	
	
	<bean id="txtWriter" class="org.springframework.batch.item.database.JdbcBatchItemWriter" scope="step">
			<property name="dataSource" ref="dataSource"></property>
			<property name="sql" 
				value="insert into txtUser(id) values(:id)">
			</property>
			<property name="itemSqlParameterSourceProvider">
				<bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider"></bean>
			</property>
	</bean>
	
	
	
	
	</beans>