<?xml version="1.0" encoding="UTF-8"?>
<!--
    说明：
    1、日志级别及文件
        日志记录采用分级记录，级别与日志文件名相对应，不同级别的日志信息记录到不同的日志文件中
        例如：error级别记录到log_error_xxx.log或log_error.log（该文件为当前记录的日志文件），而log_error_xxx.log为归档日志，
        日志文件按日期记录，同一天内，若日志文件大小等于或大于2M，则按0、1、2...顺序分别命名
        例如log-level-2013-12-21.0.log
        其它级别的日志也是如此。
    2、文件路径
        若开发、测试用，在Eclipse中运行项目，则到Eclipse的安装路径查找log文件夹，以相对路径config/properties/log。
        若部署到Tomcat下，则在Tomcat下的log文件中
    3、Appender
        FILEINFO对应info级别，文件名以log-info-xxx.log形式命名
        FILEERROR对应error级别，文件名以log-error-xxx.log形式命名
        FILEWARN对应warn级别，文件名以log-warn-xxx.log形式命名
        FILEDEBUG对应debug级别，文件名以log-debug-xxx.log形式命名
        CONSOLE_LOG将日志信息输出到控制上，为方便开发测试使用
-->
<configuration>
    <!-- properties config -->
    <property resource="properties/app.properties"/>
    <property name="logRoot" value="${log4j.root}" />
    <!-- info log config -->
    <appender name="INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- filter info log level config -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <!-- <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch> -->
        </filter>
        <!-- info log file name -->
        <file>${logRoot}/bth-core-info.log</file>
        <!-- info log print format config -->
        <encoder>
            <pattern>%date %level [%thread] Method: %logger.%method (%file:%line\) %n%msg%n</pattern>
            <charset>gbk</charset>
        </encoder>
        <!-- info log backup config -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- info backup log file name format config -->
            <fileNamePattern>${logRoot}/bth-core-info-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- save history info log file max days config -->
            <maxHistory>30</maxHistory>
            <!-- info log file max size config -->
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- in info log config -->
    <appender name="IN_INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- filter info log level config -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- info log file name -->
        <file>${logRoot}/bth-core-in.log</file>
        <!-- info log print format config -->
        <encoder>
            <pattern>%date %level [%thread] %logger.%method (%file:%line\) %n%msg%n</pattern>
            <charset>gbk</charset>
        </encoder>
        <!-- info log backup config -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- info backup log file name format config -->
            <fileNamePattern>${logRoot}/bth-core-in-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- save history info log file max days config -->
            <maxHistory>30</maxHistory>
            <!-- info log file max size config -->
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- out info log config -->
    <appender name="OUT_INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- filter info log level config -->
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
        <!-- info log file name -->
        <file>${logRoot}/bth-core-out.log</file>
        <!-- info log print format config -->
        <encoder>
            <pattern>%date %level [%thread] Method: %logger.%method (%file:%line\) %n%msg%n</pattern>
            <charset>gbk</charset>
        </encoder>
        <!-- info log backup config -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- info backup log file name format config -->
            <fileNamePattern>${logRoot}/bth-core-out-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- save history info log file max days config -->
            <maxHistory>30</maxHistory>
            <!-- info log file max size config -->
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>

    <!-- error log config -->
    <appender name="ERROR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- filter error log level config -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>ERROR</level>
            <!--<onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>-->
        </filter>
        <!-- error log file name -->
        <file>${logRoot}/bth-core-error.log</file>
        <!-- error log print format config -->
        <encoder>
            <pattern>%date %level [%thread] %logger.%method (%file:%line\) %n%msg%n</pattern>
            <charset>gbk</charset>
        </encoder>
        <!-- error log backup config -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- backup error log file name format config -->
            <fileNamePattern>${logRoot}/bth-core-error-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- save history error log file max days config -->
            <maxHistory>30</maxHistory>
            <!-- error log file max size config -->
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>



 <!-- warn log config -->
    <appender name="WARN_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- filter error log level config -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>WARN</level>
            <!--<onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>-->
        </filter>
        <!-- error log file name -->
        <file>${logRoot}/bth-core-warn.log</file>
        <!-- error log print format config -->
        <encoder>
            <pattern>%date %level [%thread] %logger.%method (%file:%line\) %n%msg%n</pattern>
            <charset>gbk</charset>
        </encoder>
        <!-- error log backup config -->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!-- backup error log file name format config -->
            <fileNamePattern>${logRoot}/bth-core-warn-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!-- save history error log file max days config -->
            <maxHistory>30</maxHistory>
            <!-- error log file max size config -->
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>500MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    <!-- console log config -->
    <appender name="CONSOLE_LOG" class="ch.qos.logback.core.ConsoleAppender">
        <!-- console log print format config -->
        <encoder>
            <pattern>%date [%-5level] [%thread] %logger{36} (%file:%line\) - %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
        <!-- Only log level INFO and above -->
        <filter class="ch.qos.logback.classic.filter.ThresholdFilter">
            <level>INFO</level>
        </filter>
    </appender>

    <logger name="org.springframework" level="INFO" additivity="false">
    	<appender-ref ref="INFO_LOG"/>
        <appender-ref ref="ERROR_LOG"/>
        <appender-ref ref="CONSOLE_LOG"/>
    </logger>

    <logger name="com.apache.ibatis" level="DEBUG" additivity="false">
        <appender-ref ref="INFO_LOG"/>
        <appender-ref ref="ERROR_LOG"/>
        <appender-ref ref="CONSOLE_LOG"/>
    </logger>

    <logger name="com.bestpay.batch" level="INFO" additivity="false">
        <appender-ref ref="INFO_LOG"/>
        <appender-ref ref="ERROR_LOG"/>
        <appender-ref ref="CONSOLE_LOG"/>
    </logger>
    
    <logger name="com.tisson.platform" level="WARN" additivity="false">
    	<appender-ref ref="INFO_LOG"/>
    	<appender-ref ref="ERROR_LOG"/>
    	<appender-ref ref="CONSOLE_LOG"/>
    </logger>

<!--     <logger name="com.bestpay.cum.aop.LogAspectManage" level="INFO" additivity="false">
        <appender-ref ref="IN_INFO_LOG"/>
        <appender-ref ref="ERROR_LOG"/>
    </logger>

    <logger name="com.bestpay.cum.dubbo.RemoteServiceFilter" level="INFO" additivity="false">
        <appender-ref ref="OUT_INFO_LOG"/>
        <appender-ref ref="ERROR_LOG"/>
    </logger> -->

    <root level="${log4j.level}">
        <!--<appender-ref ref="INFO_LOG"/>
        <appender-ref ref="IN_INFO_LOG"/>
        <appender-ref ref="OUT_INFO_LOG"/>
        <appender-ref ref="DEBUG_LOG"/>-->
        <appender-ref ref="CONSOLE_LOG"/>
        <!-- <appender-ref ref="ERROR_LOG"/> -->
    </root>
</configuration>