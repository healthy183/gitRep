<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	
	<batch:job id="multiTypeSingleFileJob">
		<batch:step id="xmlFileReadAndWriterStep">
				<batch:tasklet>
						<batch:chunk reader="multiTypesItemReader" writer="multiTypesItemWriter" commit-interval="1">
								<batch:streams>
										<batch:stream ref="studentWriter"></batch:stream>
										<batch:stream ref="goodsWriter"></batch:stream>
								</batch:streams>
						</batch:chunk>				
				</batch:tasklet>
		</batch:step>	
	</batch:job>
	
	<!-- 不同格式数据的文件读取 -->
	<bean id="multiTypesItemReader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
			<property name="resource" value="#{jobParameters['inputFilePath']}"></property>
			<property name="lineMapper">
				<bean class="org.springframework.batch.item.file.mapping.PatternMatchingCompositeLineMapper">
						<property name="tokenizers">
							<map>
								<entry key="student*" value-ref="studentTokenizer"></entry>
								<entry key="goods*" value-ref="goodsTokenizer"></entry>
							</map>
						</property>
						<property name="fieldSetMappers">
							<map>
								<entry key="student*" value-ref="studentFieldSetMapper"></entry>
								<entry key="goods*" value-ref="goodsFieldSetMapper"></entry>
							</map>
						</property>
				</bean>		
			</property>
	</bean>
	
	<bean id="studentTokenizer" class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
			<property name="delimiter" value=","></property>
			<property name="names">
				<list>
					<value>student</value>
					<value>ID</value>
					<value>name</value>
					<value>age</value>
					<value>score</value>
				</list>
			</property>
	</bean>
	
	<bean id="studentFieldSetMapper" class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
		<property name="prototypeBeanName" value="studentModel"></property>
		<property name="distanceLimit" value="1"></property>
	</bean>
	
	<bean id="studentModel" class="com.kang.batch2.model.Student" scope="prototype"></bean>
	
	<bean id="goodsTokenizer" class="org.springframework.batch.item.file.transform.FixedLengthTokenizer">
			<property name="columns" value="6-13,14-17,18-22,23-32,33-"></property>
			<property name="names" value="isin,quantity,price,customer,buyDay"></property>
	</bean>
	
	<bean id="goodsFieldSetMapper" class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
			<property name="prototypeBeanName" value="goodModel"></property>
	</bean>
	
	<bean id="goodModel" class="com.kang.batch2.model.Goods" scope="prototype"></bean>
	
	<bean id="multiTypesItemWriter" class="com.kang.batch2.multiTypeSingleFile.MultiItemWriter">
			<property name="delegates">
				<list>
					<ref bean="studentWriter"></ref>	
					<ref bean="goodsWriter"></ref>
				</list>	
			</property>
	</bean>

	<bean id="studentWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
		<property name="resource" value="#{jobParameters['outputFilePathStudent']}"></property>
		<property name="lineAggregator">
				<bean class="org.springframework.batch.item.file.transform.FormatterLineAggregator">
						<property name="fieldExtractor">
								<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
										<property name="names" value="ID,name,age,score"> </property>
								</bean>		
						</property>
						<property name="format" value="%-9s%-9s%3d%-2.0f"></property>
				</bean>
		</property>
	</bean>
	
	<bean id="goodsWriter" class="org.springframework.batch.item.file.FlatFileItemWriter" scope="step">
				<property name="resource" value="#{jobParameters['outputFilePathGoods']}"></property>	
				<property name="lineAggregator">
					<bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
							<property name="fieldExtractor">
									<bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
											<property name="names" value="isin,quantity,price,customer,buyDay"></property>	
									</bean>
							</property>
					</bean>
				</property>
	</bean>
	
</beans>	